4. Train and Evaluate KNN and SVM Models
# Train SVM model
svm_model = SVC(kernel='rbf', gamma=0.1, C=10)
svm_model.fit(X_train, y_train)

# Make predictions
y_pred_knn = knn_model.predict(X_test)
y_pred_svm = svm_model.predict(X_test)

# Evaluation metrics function
def evaluate_model(y_true, y_pred, model_name):
    accuracy = accuracy_score(y_true, y_pred)
    precision = precision_score(y_true, y_pred, average='weighted')
    recall = recall_score(y_true, y_pred, average='weighted')
    f1 = f1_score(y_true, y_pred, average='weighted')
    print(f"\n{model_name} Performance:")
    print(f"Accuracy: {accuracy:.4f}")
    print(f"Precision: {precision:.4f}")
    print(f"Recall: {recall:.4f}")
    print(f"F1 Score: {f1:.4f}")
    return accuracy, precision, recall, f1

knn_metrics = evaluate_model(y_test, y_pred_knn, "KNN")
svm_metrics = evaluate_model(y_test, y_pred_svm, "SVM")

